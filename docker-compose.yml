version: '3'
volumes:
  pgdata:
  static_files:
services:
  mongo:
    image: mongo
    restart: always
    volumes:
      # - ./init-db:/docker-entrypoint-initdb.d
      - ./data-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      # MONGO_INITDB_DATABASE: django_mongodb_docker
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin

  python: &python
    build:
      context: .
      dockerfile: docker/prod/python/Dockerfile
    # env_file:
    #   - /home/tiitorat/CODE/synced/synced_pro/.env
    environment:
      - PYTHONUNBUFFERED=1
    # volumes:
    #   - static_files:/app/src/static_files
    ports:
      - "8000:8000"
    command: bash -c "
     ls &&
     python3 manage.py collectstatic  &&
     python3 manage.py makemigrations &&
     python3 manage.py makemigrations API &&
     python3 manage.py migrate  &&
     gunicorn -w 4 -b 0.0.0.0:8000 challenge.wsgi:application"

    # links:
    #   - mongo
    depends_on:
      - mongo
  
  nginx:
    build:
      context: .
      dockerfile: docker/prod/nginx/Dockerfile
    # volumes:
    #   # - static_files:/static_files
    ports:
      - 80:80
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - python